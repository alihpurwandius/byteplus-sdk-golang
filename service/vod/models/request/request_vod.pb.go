// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: vod/request/request_vod.proto

package request

import (
	business "github.com/byteplus-sdk/byteplus-sdk-golang/service/vod/models/business"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VodGetPlayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid             string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                          // 视频ID
	Format          string `protobuf:"bytes,2,opt,name=Format,proto3" json:"Format,omitempty"`                    //封装格式，支持mp4,dash,hls，默认mp4Format
	Codec           string `protobuf:"bytes,3,opt,name=Codec,proto3" json:"Codec,omitempty"`                      //编码类型，默认h264，可选值为h264,bytevc1等Codec
	Definition      string `protobuf:"bytes,4,opt,name=Definition,proto3" json:"Definition,omitempty"`            //视频流清晰度，默认返回全部，支持：240p，360p，480p，540p，720p，1080p
	FileType        string `protobuf:"bytes,5,opt,name=FileType,proto3" json:"FileType,omitempty"`                //流文件类型，默认video，支持：加密视频流evideo，加密音频流传eaudio，非加密视频流video，普通音频音频流audio
	LogoType        string `protobuf:"bytes,6,opt,name=LogoType,proto3" json:"LogoType,omitempty"`                // 水印贴片标签
	Base64          string `protobuf:"bytes,7,opt,name=Base64,proto3" json:"Base64,omitempty"`                    //播放地址是否base64编码，默认否，支持设置： 0-否，1-是
	Ssl             string `protobuf:"bytes,8,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                          //返回https播放地址，默认否, 1-是；0-否
	NeedThumbs      string `protobuf:"bytes,9,opt,name=NeedThumbs,proto3" json:"NeedThumbs,omitempty"`            // 是否需要雪碧图（缩略图），默认否，1-是；0-否
	NeedBarrageMask string `protobuf:"bytes,10,opt,name=NeedBarrageMask,proto3" json:"NeedBarrageMask,omitempty"` // 是否需要蒙版弹幕，默认否，1-是；0-否
	CdnType         string `protobuf:"bytes,11,opt,name=CdnType,proto3" json:"CdnType,omitempty"`                 // 指定CDN类型
}

func (x *VodGetPlayInfoRequest) Reset() {
	*x = VodGetPlayInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoRequest) ProtoMessage() {}

func (x *VodGetPlayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoRequest.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{0}
}

func (x *VodGetPlayInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetLogoType() string {
	if x != nil {
		return x.LogoType
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetNeedThumbs() string {
	if x != nil {
		return x.NeedThumbs
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetNeedBarrageMask() string {
	if x != nil {
		return x.NeedBarrageMask
	}
	return ""
}

func (x *VodGetPlayInfoRequest) GetCdnType() string {
	if x != nil {
		return x.CdnType
	}
	return ""
}

type VodGetOriginalPlayInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid    string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`       //视频ID
	Base64 string `protobuf:"bytes,2,opt,name=Base64,proto3" json:"Base64,omitempty"` //播放地址是否base64编码,默认否，0-否，1-是
	Ssl    string `protobuf:"bytes,3,opt,name=Ssl,proto3" json:"Ssl,omitempty"`       //返回https播放地址,默认否, 0-否，1-是
}

func (x *VodGetOriginalPlayInfoRequest) Reset() {
	*x = VodGetOriginalPlayInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetOriginalPlayInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetOriginalPlayInfoRequest) ProtoMessage() {}

func (x *VodGetOriginalPlayInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetOriginalPlayInfoRequest.ProtoReflect.Descriptor instead.
func (*VodGetOriginalPlayInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{1}
}

func (x *VodGetOriginalPlayInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetOriginalPlayInfoRequest) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *VodGetOriginalPlayInfoRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

type VodGetPrivateDrmPlayAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrmType     string `protobuf:"bytes,1,opt,name=DrmType,proto3" json:"DrmType,omitempty"`         // drm类型
	Vid         string `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`                 // 视频id
	PlayAuthIds string `protobuf:"bytes,3,opt,name=PlayAuthIds,proto3" json:"PlayAuthIds,omitempty"` // 播放许可id列表，以逗号分割
}

func (x *VodGetPrivateDrmPlayAuthRequest) Reset() {
	*x = VodGetPrivateDrmPlayAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPrivateDrmPlayAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPrivateDrmPlayAuthRequest) ProtoMessage() {}

func (x *VodGetPrivateDrmPlayAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPrivateDrmPlayAuthRequest.ProtoReflect.Descriptor instead.
func (*VodGetPrivateDrmPlayAuthRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{2}
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetDrmType() string {
	if x != nil {
		return x.DrmType
	}
	return ""
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetPrivateDrmPlayAuthRequest) GetPlayAuthIds() string {
	if x != nil {
		return x.PlayAuthIds
	}
	return ""
}

type VodGetHlsDecryptionKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrmAuthToken string `protobuf:"bytes,1,opt,name=DrmAuthToken,proto3" json:"DrmAuthToken,omitempty"` // Drm鉴权Token
	Ak           string `protobuf:"bytes,2,opt,name=Ak,proto3" json:"Ak,omitempty"`                     // AccessKey
	Source       string `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`             // Drm鉴权数据源
}

func (x *VodGetHlsDecryptionKeyRequest) Reset() {
	*x = VodGetHlsDecryptionKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetHlsDecryptionKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetHlsDecryptionKeyRequest) ProtoMessage() {}

func (x *VodGetHlsDecryptionKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetHlsDecryptionKeyRequest.ProtoReflect.Descriptor instead.
func (*VodGetHlsDecryptionKeyRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{3}
}

func (x *VodGetHlsDecryptionKeyRequest) GetDrmAuthToken() string {
	if x != nil {
		return x.DrmAuthToken
	}
	return ""
}

func (x *VodGetHlsDecryptionKeyRequest) GetAk() string {
	if x != nil {
		return x.Ak
	}
	return ""
}

func (x *VodGetHlsDecryptionKeyRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type VodUrlUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string                         `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` // 上传的空间名
	URLSets   []*business.VodUrlUploadURLSet `protobuf:"bytes,2,rep,name=URLSets,proto3" json:"URLSets,omitempty"`     // 上传URL设置参数集合
}

func (x *VodUrlUploadRequest) Reset() {
	*x = VodUrlUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadRequest) ProtoMessage() {}

func (x *VodUrlUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadRequest.ProtoReflect.Descriptor instead.
func (*VodUrlUploadRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{4}
}

func (x *VodUrlUploadRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUrlUploadRequest) GetURLSets() []*business.VodUrlUploadURLSet {
	if x != nil {
		return x.URLSets
	}
	return nil
}

type VodQueryUploadTaskInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobIds string `protobuf:"bytes,1,opt,name=JobIds,proto3" json:"JobIds,omitempty"`
}

func (x *VodQueryUploadTaskInfoRequest) Reset() {
	*x = VodQueryUploadTaskInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadTaskInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadTaskInfoRequest) ProtoMessage() {}

func (x *VodQueryUploadTaskInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadTaskInfoRequest.ProtoReflect.Descriptor instead.
func (*VodQueryUploadTaskInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{5}
}

func (x *VodQueryUploadTaskInfoRequest) GetJobIds() string {
	if x != nil {
		return x.JobIds
	}
	return ""
}

type VodApplyUploadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName  string  `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SessionKey string  `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	FileSize   float64 `protobuf:"fixed64,3,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	FileType   string  `protobuf:"bytes,4,opt,name=FileType,proto3" json:"FileType,omitempty"`
}

func (x *VodApplyUploadInfoRequest) Reset() {
	*x = VodApplyUploadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoRequest) ProtoMessage() {}

func (x *VodApplyUploadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoRequest.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{6}
}

func (x *VodApplyUploadInfoRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodApplyUploadInfoRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *VodApplyUploadInfoRequest) GetFileSize() float64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *VodApplyUploadInfoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type VodUploadMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
}

func (x *VodUploadMediaRequest) Reset() {
	*x = VodUploadMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMediaRequest) ProtoMessage() {}

func (x *VodUploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMediaRequest.ProtoReflect.Descriptor instead.
func (*VodUploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{7}
}

func (x *VodUploadMediaRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUploadMediaRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VodUploadMediaRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUploadMediaRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

type VodUploadMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	FilePath     string `protobuf:"bytes,2,opt,name=FilePath,proto3" json:"FilePath,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
	FileType     string `protobuf:"bytes,5,opt,name=FileType,proto3" json:"FileType,omitempty"`
}

func (x *VodUploadMaterialRequest) Reset() {
	*x = VodUploadMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMaterialRequest) ProtoMessage() {}

func (x *VodUploadMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMaterialRequest.ProtoReflect.Descriptor instead.
func (*VodUploadMaterialRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{8}
}

func (x *VodUploadMaterialRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *VodUploadMaterialRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

type VodCommitUploadInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SessionKey   string `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
}

func (x *VodCommitUploadInfoRequest) Reset() {
	*x = VodCommitUploadInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoRequest) ProtoMessage() {}

func (x *VodCommitUploadInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoRequest.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{9}
}

func (x *VodCommitUploadInfoRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodCommitUploadInfoRequest) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

type VodUrlUploadJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	URLSets   string `protobuf:"bytes,2,opt,name=URLSets,proto3" json:"URLSets,omitempty"`
}

func (x *VodUrlUploadJsonRequest) Reset() {
	*x = VodUrlUploadJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadJsonRequest) ProtoMessage() {}

func (x *VodUrlUploadJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadJsonRequest.ProtoReflect.Descriptor instead.
func (*VodUrlUploadJsonRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{10}
}

func (x *VodUrlUploadJsonRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUrlUploadJsonRequest) GetURLSets() string {
	if x != nil {
		return x.URLSets
	}
	return ""
}

type VodGetRecommendedPosterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"` //视频ID列表
}

func (x *VodGetRecommendedPosterRequest) Reset() {
	*x = VodGetRecommendedPosterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetRecommendedPosterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetRecommendedPosterRequest) ProtoMessage() {}

func (x *VodGetRecommendedPosterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetRecommendedPosterRequest.ProtoReflect.Descriptor instead.
func (*VodGetRecommendedPosterRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{11}
}

func (x *VodGetRecommendedPosterRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

type VodUpdateMediaPublishStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid    string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`       //视频ID
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"` //视频发布状态
}

func (x *VodUpdateMediaPublishStatusRequest) Reset() {
	*x = VodUpdateMediaPublishStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaPublishStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaPublishStatusRequest) ProtoMessage() {}

func (x *VodUpdateMediaPublishStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaPublishStatusRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaPublishStatusRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{12}
}

func (x *VodUpdateMediaPublishStatusRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateMediaPublishStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodUpdateMediaInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string                `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                 //视频ID
	PosterUri   *wrappers.StringValue `protobuf:"bytes,2,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`     //视频封面Uri
	Title       *wrappers.StringValue `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`             //视频名称
	Description *wrappers.StringValue `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"` //视频描述
	Tags        *wrappers.StringValue `protobuf:"bytes,5,opt,name=Tags,proto3" json:"Tags,omitempty"`               //视频标签
}

func (x *VodUpdateMediaInfoRequest) Reset() {
	*x = VodUpdateMediaInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaInfoRequest) ProtoMessage() {}

func (x *VodUpdateMediaInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaInfoRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{13}
}

func (x *VodUpdateMediaInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateMediaInfoRequest) GetPosterUri() *wrappers.StringValue {
	if x != nil {
		return x.PosterUri
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetTitle() *wrappers.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *VodUpdateMediaInfoRequest) GetTags() *wrappers.StringValue {
	if x != nil {
		return x.Tags
	}
	return nil
}

type VodGetMediaInfosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"` //视频ID列表
}

func (x *VodGetMediaInfosRequest) Reset() {
	*x = VodGetMediaInfosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaInfosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaInfosRequest) ProtoMessage() {}

func (x *VodGetMediaInfosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaInfosRequest.ProtoReflect.Descriptor instead.
func (*VodGetMediaInfosRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{14}
}

func (x *VodGetMediaInfosRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

type VodDeleteMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vids         string `protobuf:"bytes,1,opt,name=Vids,proto3" json:"Vids,omitempty"`                 //视频ID列表
	CallbackArgs string `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` //回调回传参数
}

func (x *VodDeleteMediaRequest) Reset() {
	*x = VodDeleteMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaRequest) ProtoMessage() {}

func (x *VodDeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{15}
}

func (x *VodDeleteMediaRequest) GetVids() string {
	if x != nil {
		return x.Vids
	}
	return ""
}

func (x *VodDeleteMediaRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type VodDeleteTranscodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                   //视频ID
	FileIds      string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`           //转码视频ID列表
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` //回调回传参数
}

func (x *VodDeleteTranscodesRequest) Reset() {
	*x = VodDeleteTranscodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTranscodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTranscodesRequest) ProtoMessage() {}

func (x *VodDeleteTranscodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTranscodesRequest.ProtoReflect.Descriptor instead.
func (*VodDeleteTranscodesRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{16}
}

func (x *VodDeleteTranscodesRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodDeleteTranscodesRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodDeleteTranscodesRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type VodGetMediaListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"` //空间名
	Vid       string `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`             //视频ID
	Status    string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`       //视频状态
	Order     string `protobuf:"bytes,4,opt,name=Order,proto3" json:"Order,omitempty"`         //排序规则
	Tags      string `protobuf:"bytes,5,opt,name=Tags,proto3" json:"Tags,omitempty"`           //标签，多个用","隔开
	StartTime string `protobuf:"bytes,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"` //查询时间范围下限
	EndTime   string `protobuf:"bytes,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     //查询时间范围上限
	Offset    string `protobuf:"bytes,8,opt,name=Offset,proto3" json:"Offset,omitempty"`       //数据偏移量
	PageSize  string `protobuf:"bytes,9,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   //分页大小
}

func (x *VodGetMediaListRequest) Reset() {
	*x = VodGetMediaListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaListRequest) ProtoMessage() {}

func (x *VodGetMediaListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaListRequest.ProtoReflect.Descriptor instead.
func (*VodGetMediaListRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{17}
}

func (x *VodGetMediaListRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodGetMediaListRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetMediaListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodGetMediaListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *VodGetMediaListRequest) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *VodGetMediaListRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *VodGetMediaListRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *VodGetMediaListRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *VodGetMediaListRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

type VodGetSubtitleInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid         string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                 //视频ID
	FileIds     string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`         //转码视频id列表，多个用","隔开
	Languages   string `protobuf:"bytes,3,opt,name=Languages,proto3" json:"Languages,omitempty"`     //字幕语言列表，多个用","隔开
	Formats     string `protobuf:"bytes,4,opt,name=Formats,proto3" json:"Formats,omitempty"`         //字幕格式列表，多个用","隔开
	LanguageIds string `protobuf:"bytes,5,opt,name=LanguageIds,proto3" json:"LanguageIds,omitempty"` //字幕语言Id列表，多个用","隔开
	SubtitleIds string `protobuf:"bytes,6,opt,name=SubtitleIds,proto3" json:"SubtitleIds,omitempty"` //字幕Id列表，多个用","隔开
	Status      string `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`           //状态，多个用","隔开
	Title       string `protobuf:"bytes,8,opt,name=Title,proto3" json:"Title,omitempty"`             //标题
	Tag         string `protobuf:"bytes,9,opt,name=Tag,proto3" json:"Tag,omitempty"`                 //标签
	Offset      string `protobuf:"bytes,10,opt,name=Offset,proto3" json:"Offset,omitempty"`          // file的偏移量
	PageSize    string `protobuf:"bytes,11,opt,name=PageSize,proto3" json:"PageSize,omitempty"`      //分页大小（结果一fileId分页）
	Ssl         string `protobuf:"bytes,12,opt,name=Ssl,proto3" json:"Ssl,omitempty"`                //返回https播放地址，默认否, 1-是；0-否
}

func (x *VodGetSubtitleInfoListRequest) Reset() {
	*x = VodGetSubtitleInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSubtitleInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSubtitleInfoListRequest) ProtoMessage() {}

func (x *VodGetSubtitleInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSubtitleInfoListRequest.ProtoReflect.Descriptor instead.
func (*VodGetSubtitleInfoListRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{18}
}

func (x *VodGetSubtitleInfoListRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetFormats() string {
	if x != nil {
		return x.Formats
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetLanguageIds() string {
	if x != nil {
		return x.LanguageIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetSubtitleIds() string {
	if x != nil {
		return x.SubtitleIds
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

func (x *VodGetSubtitleInfoListRequest) GetSsl() string {
	if x != nil {
		return x.Ssl
	}
	return ""
}

type VodUpdateSubtitleStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid       string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`             //视频ID
	FileIds   string `protobuf:"bytes,2,opt,name=FileIds,proto3" json:"FileIds,omitempty"`     //转码视频id列表，多个用","隔开
	Languages string `protobuf:"bytes,3,opt,name=Languages,proto3" json:"Languages,omitempty"` //字幕语言列表，多个用","隔开
	Formats   string `protobuf:"bytes,4,opt,name=Formats,proto3" json:"Formats,omitempty"`     //字幕格式列表，多个用","隔开
	Status    string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`       //状态
}

func (x *VodUpdateSubtitleStatusRequest) Reset() {
	*x = VodUpdateSubtitleStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleStatusRequest) ProtoMessage() {}

func (x *VodUpdateSubtitleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleStatusRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleStatusRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{19}
}

func (x *VodUpdateSubtitleStatusRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetFileIds() string {
	if x != nil {
		return x.FileIds
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetFormats() string {
	if x != nil {
		return x.Formats
	}
	return ""
}

func (x *VodUpdateSubtitleStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodUpdateSubtitleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid      string                `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`           //视频ID
	FileId   string                `protobuf:"bytes,2,opt,name=FileId,proto3" json:"FileId,omitempty"`     //转码视频id列表
	Language string                `protobuf:"bytes,3,opt,name=Language,proto3" json:"Language,omitempty"` //字幕语言列表
	Format   string                `protobuf:"bytes,4,opt,name=Format,proto3" json:"Format,omitempty"`     //字幕格式列表
	Title    *wrappers.StringValue `protobuf:"bytes,6,opt,name=Title,proto3" json:"Title,omitempty"`       //标题
	Tag      *wrappers.StringValue `protobuf:"bytes,7,opt,name=Tag,proto3" json:"Tag,omitempty"`           //标签
}

func (x *VodUpdateSubtitleInfoRequest) Reset() {
	*x = VodUpdateSubtitleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleInfoRequest) ProtoMessage() {}

func (x *VodUpdateSubtitleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleInfoRequest.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleInfoRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{20}
}

func (x *VodUpdateSubtitleInfoRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodUpdateSubtitleInfoRequest) GetTitle() *wrappers.StringValue {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *VodUpdateSubtitleInfoRequest) GetTag() *wrappers.StringValue {
	if x != nil {
		return x.Tag
	}
	return nil
}

type VodStartWorkflowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string                   `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`                   // 视频Id
	TemplateId   string                   `protobuf:"bytes,2,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`     // 工作流模板Id
	Input        *business.WorkflowParams `protobuf:"bytes,3,opt,name=Input,proto3" json:"Input,omitempty"`               // 动态参数
	Priority     int32                    `protobuf:"varint,4,opt,name=Priority,proto3" json:"Priority,omitempty"`        // 任务优先级
	CallbackArgs string                   `protobuf:"bytes,5,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` // 回调参数
}

func (x *VodStartWorkflowRequest) Reset() {
	*x = VodStartWorkflowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_request_request_vod_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartWorkflowRequest) ProtoMessage() {}

func (x *VodStartWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vod_request_request_vod_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartWorkflowRequest.ProtoReflect.Descriptor instead.
func (*VodStartWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_vod_request_request_vod_proto_rawDescGZIP(), []int{21}
}

func (x *VodStartWorkflowRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodStartWorkflowRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VodStartWorkflowRequest) GetInput() *business.WorkflowParams {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *VodStartWorkflowRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *VodStartWorkflowRequest) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

var File_vod_request_request_vod_proto protoreflect.FileDescriptor

var file_vod_request_request_vod_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1b, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x76, 0x6f,
	0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x02, 0x0a,
	0x15, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x65, 0x64,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65,
	0x65, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x65, 0x65, 0x64,
	0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x4e, 0x65, 0x65, 0x64, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x64, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x64, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b, 0x0a, 0x1d,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73, 0x6c, 0x22, 0x6f, 0x0a, 0x1f, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c, 0x61,
	0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x6c, 0x61, 0x79, 0x41, 0x75, 0x74, 0x68, 0x49, 0x64, 0x73, 0x22, 0x6b, 0x0a, 0x1d, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x72, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x72, 0x6d, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x41, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x41, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7f, 0x0a, 0x13, 0x56, 0x6f, 0x64, 0x55, 0x72,
	0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x07,
	0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x52,
	0x07, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x18,
	0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x51, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4a,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x53,
	0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x52, 0x4c, 0x53, 0x65,
	0x74, 0x73, 0x22, 0x34, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x56, 0x69, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x02, 0x0a, 0x19, 0x56, 0x6f, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x72, 0x69, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x22, 0x2d, 0x0a, 0x17, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x56, 0x69, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x15, 0x56, 0x6f, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x56, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x56, 0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x22, 0x6c, 0x0a, 0x1a, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xcd, 0x02, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x53, 0x73, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x53, 0x73,
	0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xe0, 0x01, 0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x32, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03,
	0x54, 0x61, 0x67, 0x22, 0xcf, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x42, 0xd4, 0x01, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x42, 0x0a, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x01, 0x5a, 0x46,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x23, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0xe2, 0x02, 0x27, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_request_request_vod_proto_rawDescOnce sync.Once
	file_vod_request_request_vod_proto_rawDescData = file_vod_request_request_vod_proto_rawDesc
)

func file_vod_request_request_vod_proto_rawDescGZIP() []byte {
	file_vod_request_request_vod_proto_rawDescOnce.Do(func() {
		file_vod_request_request_vod_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_request_request_vod_proto_rawDescData)
	})
	return file_vod_request_request_vod_proto_rawDescData
}

var file_vod_request_request_vod_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_vod_request_request_vod_proto_goTypes = []interface{}{
	(*VodGetPlayInfoRequest)(nil),              // 0: Byteplus.Vod.Models.Request.VodGetPlayInfoRequest
	(*VodGetOriginalPlayInfoRequest)(nil),      // 1: Byteplus.Vod.Models.Request.VodGetOriginalPlayInfoRequest
	(*VodGetPrivateDrmPlayAuthRequest)(nil),    // 2: Byteplus.Vod.Models.Request.VodGetPrivateDrmPlayAuthRequest
	(*VodGetHlsDecryptionKeyRequest)(nil),      // 3: Byteplus.Vod.Models.Request.VodGetHlsDecryptionKeyRequest
	(*VodUrlUploadRequest)(nil),                // 4: Byteplus.Vod.Models.Request.VodUrlUploadRequest
	(*VodQueryUploadTaskInfoRequest)(nil),      // 5: Byteplus.Vod.Models.Request.VodQueryUploadTaskInfoRequest
	(*VodApplyUploadInfoRequest)(nil),          // 6: Byteplus.Vod.Models.Request.VodApplyUploadInfoRequest
	(*VodUploadMediaRequest)(nil),              // 7: Byteplus.Vod.Models.Request.VodUploadMediaRequest
	(*VodUploadMaterialRequest)(nil),           // 8: Byteplus.Vod.Models.Request.VodUploadMaterialRequest
	(*VodCommitUploadInfoRequest)(nil),         // 9: Byteplus.Vod.Models.Request.VodCommitUploadInfoRequest
	(*VodUrlUploadJsonRequest)(nil),            // 10: Byteplus.Vod.Models.Request.VodUrlUploadJsonRequest
	(*VodGetRecommendedPosterRequest)(nil),     // 11: Byteplus.Vod.Models.Request.VodGetRecommendedPosterRequest
	(*VodUpdateMediaPublishStatusRequest)(nil), // 12: Byteplus.Vod.Models.Request.VodUpdateMediaPublishStatusRequest
	(*VodUpdateMediaInfoRequest)(nil),          // 13: Byteplus.Vod.Models.Request.VodUpdateMediaInfoRequest
	(*VodGetMediaInfosRequest)(nil),            // 14: Byteplus.Vod.Models.Request.VodGetMediaInfosRequest
	(*VodDeleteMediaRequest)(nil),              // 15: Byteplus.Vod.Models.Request.VodDeleteMediaRequest
	(*VodDeleteTranscodesRequest)(nil),         // 16: Byteplus.Vod.Models.Request.VodDeleteTranscodesRequest
	(*VodGetMediaListRequest)(nil),             // 17: Byteplus.Vod.Models.Request.VodGetMediaListRequest
	(*VodGetSubtitleInfoListRequest)(nil),      // 18: Byteplus.Vod.Models.Request.VodGetSubtitleInfoListRequest
	(*VodUpdateSubtitleStatusRequest)(nil),     // 19: Byteplus.Vod.Models.Request.VodUpdateSubtitleStatusRequest
	(*VodUpdateSubtitleInfoRequest)(nil),       // 20: Byteplus.Vod.Models.Request.VodUpdateSubtitleInfoRequest
	(*VodStartWorkflowRequest)(nil),            // 21: Byteplus.Vod.Models.Request.VodStartWorkflowRequest
	(*business.VodUrlUploadURLSet)(nil),        // 22: Byteplus.Vod.Models.Business.VodUrlUploadURLSet
	(*wrappers.StringValue)(nil),               // 23: google.protobuf.StringValue
	(*business.WorkflowParams)(nil),            // 24: Byteplus.Vod.Models.Business.WorkflowParams
}
var file_vod_request_request_vod_proto_depIdxs = []int32{
	22, // 0: Byteplus.Vod.Models.Request.VodUrlUploadRequest.URLSets:type_name -> Byteplus.Vod.Models.Business.VodUrlUploadURLSet
	23, // 1: Byteplus.Vod.Models.Request.VodUpdateMediaInfoRequest.PosterUri:type_name -> google.protobuf.StringValue
	23, // 2: Byteplus.Vod.Models.Request.VodUpdateMediaInfoRequest.Title:type_name -> google.protobuf.StringValue
	23, // 3: Byteplus.Vod.Models.Request.VodUpdateMediaInfoRequest.Description:type_name -> google.protobuf.StringValue
	23, // 4: Byteplus.Vod.Models.Request.VodUpdateMediaInfoRequest.Tags:type_name -> google.protobuf.StringValue
	23, // 5: Byteplus.Vod.Models.Request.VodUpdateSubtitleInfoRequest.Title:type_name -> google.protobuf.StringValue
	23, // 6: Byteplus.Vod.Models.Request.VodUpdateSubtitleInfoRequest.Tag:type_name -> google.protobuf.StringValue
	24, // 7: Byteplus.Vod.Models.Request.VodStartWorkflowRequest.Input:type_name -> Byteplus.Vod.Models.Business.WorkflowParams
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_vod_request_request_vod_proto_init() }
func file_vod_request_request_vod_proto_init() {
	if File_vod_request_request_vod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vod_request_request_vod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetOriginalPlayInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPrivateDrmPlayAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetHlsDecryptionKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadTaskInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetRecommendedPosterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaPublishStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaInfosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTranscodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSubtitleInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_request_request_vod_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartWorkflowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_request_request_vod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_request_request_vod_proto_goTypes,
		DependencyIndexes: file_vod_request_request_vod_proto_depIdxs,
		MessageInfos:      file_vod_request_request_vod_proto_msgTypes,
	}.Build()
	File_vod_request_request_vod_proto = out.File
	file_vod_request_request_vod_proto_rawDesc = nil
	file_vod_request_request_vod_proto_goTypes = nil
	file_vod_request_request_vod_proto_depIdxs = nil
}
