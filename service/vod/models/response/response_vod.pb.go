// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: vod/response/response_vod.proto

package response

import (
	base "github.com/byteplus-sdk/byteplus-sdk-golang/service/vod/models/base"
	business "github.com/byteplus-sdk/byteplus-sdk-golang/service/vod/models/business"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VodGetPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodPlayInfoModel `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPlayInfoResponse) Reset() {
	*x = VodGetPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoResponse) ProtoMessage() {}

func (x *VodGetPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{0}
}

func (x *VodGetPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlayInfoResponse) GetResult() *business.VodPlayInfoModel {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetHlsDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetHlsDecryptionKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetHlsDecryptionKeyResponse) Reset() {
	*x = VodGetHlsDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetHlsDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetHlsDecryptionKeyResponse) ProtoMessage() {}

func (x *VodGetHlsDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetHlsDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*VodGetHlsDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{1}
}

func (x *VodGetHlsDecryptionKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetHlsDecryptionKeyResponse) GetResult() *business.VodGetHlsDecryptionKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUploadMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodCommitData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUploadMediaResponse) Reset() {
	*x = VodUploadMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMediaResponse) ProtoMessage() {}

func (x *VodUploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMediaResponse.ProtoReflect.Descriptor instead.
func (*VodUploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{2}
}

func (x *VodUploadMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUploadMediaResponse) GetResult() *business.VodCommitData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryUploadTaskInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodQueryData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryUploadTaskInfoResponse) Reset() {
	*x = VodQueryUploadTaskInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadTaskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadTaskInfoResponse) ProtoMessage() {}

func (x *VodQueryUploadTaskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadTaskInfoResponse.ProtoReflect.Descriptor instead.
func (*VodQueryUploadTaskInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{3}
}

func (x *VodQueryUploadTaskInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryUploadTaskInfoResponse) GetResult() *business.VodQueryData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUrlUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodUrlResponseData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUrlUploadResponse) Reset() {
	*x = VodUrlUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadResponse) ProtoMessage() {}

func (x *VodUrlUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadResponse.ProtoReflect.Descriptor instead.
func (*VodUrlUploadResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{4}
}

func (x *VodUrlUploadResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUrlUploadResponse) GetResult() *business.VodUrlResponseData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodApplyUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodApplyUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodApplyUploadInfoResponse) Reset() {
	*x = VodApplyUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoResponse) ProtoMessage() {}

func (x *VodApplyUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{5}
}

func (x *VodApplyUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodApplyUploadInfoResponse) GetResult() *business.VodApplyUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCommitUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodCommitUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodCommitUploadInfoResponse) Reset() {
	*x = VodCommitUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResponse) ProtoMessage() {}

func (x *VodCommitUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{6}
}

func (x *VodCommitUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCommitUploadInfoResponse) GetResult() *business.VodCommitUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetMediaInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetMediaInfosResponse) Reset() {
	*x = VodGetMediaInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaInfosResponse) ProtoMessage() {}

func (x *VodGetMediaInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaInfosResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaInfosResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{7}
}

func (x *VodGetMediaInfosResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaInfosResponse) GetResult() *business.VodGetMediaInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateMediaInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodUpdateMediaInfoResponse) Reset() {
	*x = VodUpdateMediaInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaInfoResponse) ProtoMessage() {}

func (x *VodUpdateMediaInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaInfoResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaInfoResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{8}
}

func (x *VodUpdateMediaInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateMediaPublishStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodUpdateMediaPublishStatusResponse) Reset() {
	*x = VodUpdateMediaPublishStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaPublishStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaPublishStatusResponse) ProtoMessage() {}

func (x *VodUpdateMediaPublishStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaPublishStatusResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaPublishStatusResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{9}
}

func (x *VodUpdateMediaPublishStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDeleteMediaData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDeleteMediaResponse) Reset() {
	*x = VodDeleteMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaResponse) ProtoMessage() {}

func (x *VodDeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{10}
}

func (x *VodDeleteMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteMediaResponse) GetResult() *business.VodDeleteMediaData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteTranscodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDeleteTranscodesData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDeleteTranscodesResponse) Reset() {
	*x = VodDeleteTranscodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTranscodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTranscodesResponse) ProtoMessage() {}

func (x *VodDeleteTranscodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTranscodesResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteTranscodesResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{11}
}

func (x *VodDeleteTranscodesResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteTranscodesResponse) GetResult() *business.VodDeleteTranscodesData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetMediaListData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetMediaListResponse) Reset() {
	*x = VodGetMediaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaListResponse) ProtoMessage() {}

func (x *VodGetMediaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaListResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaListResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{12}
}

func (x *VodGetMediaListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaListResponse) GetResult() *business.VodGetMediaListData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodStartWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodStartWorkflowResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodStartWorkflowResponse) Reset() {
	*x = VodStartWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_response_response_vod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartWorkflowResponse) ProtoMessage() {}

func (x *VodStartWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_response_response_vod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartWorkflowResponse.ProtoReflect.Descriptor instead.
func (*VodStartWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_vod_response_response_vod_proto_rawDescGZIP(), []int{13}
}

func (x *VodStartWorkflowResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodStartWorkflowResponse) GetResult() *business.VodStartWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_vod_response_response_vod_proto protoreflect.FileDescriptor

var file_vod_response_response_vod_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x6f, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x76, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1c, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x76, 0x6f, 0x64, 0x2f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x01, 0x0a, 0x16,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb8, 0x01, 0x0a,
	0x14, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc6,
	0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d,
	0x0a, 0x23, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x01,
	0x0a, 0x16, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x48, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x1b, 0x56,
	0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xbc, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xc0, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0xd8, 0x01, 0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0b, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x01, 0x5a, 0x47,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x24,
	0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0xe2, 0x02, 0x27, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_response_response_vod_proto_rawDescOnce sync.Once
	file_vod_response_response_vod_proto_rawDescData = file_vod_response_response_vod_proto_rawDesc
)

func file_vod_response_response_vod_proto_rawDescGZIP() []byte {
	file_vod_response_response_vod_proto_rawDescOnce.Do(func() {
		file_vod_response_response_vod_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_response_response_vod_proto_rawDescData)
	})
	return file_vod_response_response_vod_proto_rawDescData
}

var file_vod_response_response_vod_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_vod_response_response_vod_proto_goTypes = []interface{}{
	(*VodGetPlayInfoResponse)(nil),                // 0: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse
	(*VodGetHlsDecryptionKeyResponse)(nil),        // 1: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse
	(*VodUploadMediaResponse)(nil),                // 2: Byteplus.Vod.Models.Response.VodUploadMediaResponse
	(*VodQueryUploadTaskInfoResponse)(nil),        // 3: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse
	(*VodUrlUploadResponse)(nil),                  // 4: Byteplus.Vod.Models.Response.VodUrlUploadResponse
	(*VodApplyUploadInfoResponse)(nil),            // 5: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse
	(*VodCommitUploadInfoResponse)(nil),           // 6: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse
	(*VodGetMediaInfosResponse)(nil),              // 7: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse
	(*VodUpdateMediaInfoResponse)(nil),            // 8: Byteplus.Vod.Models.Response.VodUpdateMediaInfoResponse
	(*VodUpdateMediaPublishStatusResponse)(nil),   // 9: Byteplus.Vod.Models.Response.VodUpdateMediaPublishStatusResponse
	(*VodDeleteMediaResponse)(nil),                // 10: Byteplus.Vod.Models.Response.VodDeleteMediaResponse
	(*VodDeleteTranscodesResponse)(nil),           // 11: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse
	(*VodGetMediaListResponse)(nil),               // 12: Byteplus.Vod.Models.Response.VodGetMediaListResponse
	(*VodStartWorkflowResponse)(nil),              // 13: Byteplus.Vod.Models.Response.VodStartWorkflowResponse
	(*base.ResponseMetadata)(nil),                 // 14: Byteplus.Vod.Models.Base.ResponseMetadata
	(*business.VodPlayInfoModel)(nil),             // 15: Byteplus.Vod.Models.Business.VodPlayInfoModel
	(*business.VodGetHlsDecryptionKeyResult)(nil), // 16: Byteplus.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	(*business.VodCommitData)(nil),                // 17: Byteplus.Vod.Models.Business.VodCommitData
	(*business.VodQueryData)(nil),                 // 18: Byteplus.Vod.Models.Business.VodQueryData
	(*business.VodUrlResponseData)(nil),           // 19: Byteplus.Vod.Models.Business.VodUrlResponseData
	(*business.VodApplyUploadInfoResult)(nil),     // 20: Byteplus.Vod.Models.Business.VodApplyUploadInfoResult
	(*business.VodCommitUploadInfoResult)(nil),    // 21: Byteplus.Vod.Models.Business.VodCommitUploadInfoResult
	(*business.VodGetMediaInfosData)(nil),         // 22: Byteplus.Vod.Models.Business.VodGetMediaInfosData
	(*business.VodDeleteMediaData)(nil),           // 23: Byteplus.Vod.Models.Business.VodDeleteMediaData
	(*business.VodDeleteTranscodesData)(nil),      // 24: Byteplus.Vod.Models.Business.VodDeleteTranscodesData
	(*business.VodGetMediaListData)(nil),          // 25: Byteplus.Vod.Models.Business.VodGetMediaListData
	(*business.VodStartWorkflowResult)(nil),       // 26: Byteplus.Vod.Models.Business.VodStartWorkflowResult
}
var file_vod_response_response_vod_proto_depIdxs = []int32{
	14, // 0: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	15, // 1: Byteplus.Vod.Models.Response.VodGetPlayInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodPlayInfoModel
	14, // 2: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	16, // 3: Byteplus.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	14, // 4: Byteplus.Vod.Models.Response.VodUploadMediaResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	17, // 5: Byteplus.Vod.Models.Response.VodUploadMediaResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCommitData
	14, // 6: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	18, // 7: Byteplus.Vod.Models.Response.VodQueryUploadTaskInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodQueryData
	14, // 8: Byteplus.Vod.Models.Response.VodUrlUploadResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	19, // 9: Byteplus.Vod.Models.Response.VodUrlUploadResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodUrlResponseData
	14, // 10: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	20, // 11: Byteplus.Vod.Models.Response.VodApplyUploadInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodApplyUploadInfoResult
	14, // 12: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	21, // 13: Byteplus.Vod.Models.Response.VodCommitUploadInfoResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodCommitUploadInfoResult
	14, // 14: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	22, // 15: Byteplus.Vod.Models.Response.VodGetMediaInfosResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetMediaInfosData
	14, // 16: Byteplus.Vod.Models.Response.VodUpdateMediaInfoResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	14, // 17: Byteplus.Vod.Models.Response.VodUpdateMediaPublishStatusResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	14, // 18: Byteplus.Vod.Models.Response.VodDeleteMediaResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	23, // 19: Byteplus.Vod.Models.Response.VodDeleteMediaResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDeleteMediaData
	14, // 20: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	24, // 21: Byteplus.Vod.Models.Response.VodDeleteTranscodesResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodDeleteTranscodesData
	14, // 22: Byteplus.Vod.Models.Response.VodGetMediaListResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	25, // 23: Byteplus.Vod.Models.Response.VodGetMediaListResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodGetMediaListData
	14, // 24: Byteplus.Vod.Models.Response.VodStartWorkflowResponse.ResponseMetadata:type_name -> Byteplus.Vod.Models.Base.ResponseMetadata
	26, // 25: Byteplus.Vod.Models.Response.VodStartWorkflowResponse.Result:type_name -> Byteplus.Vod.Models.Business.VodStartWorkflowResult
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_vod_response_response_vod_proto_init() }
func file_vod_response_response_vod_proto_init() {
	if File_vod_response_response_vod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vod_response_response_vod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetHlsDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadTaskInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaPublishStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTranscodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_response_response_vod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_response_response_vod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_response_response_vod_proto_goTypes,
		DependencyIndexes: file_vod_response_response_vod_proto_depIdxs,
		MessageInfos:      file_vod_response_response_vod_proto_msgTypes,
	}.Build()
	File_vod_response_response_vod_proto = out.File
	file_vod_response_response_vod_proto_rawDesc = nil
	file_vod_response_response_vod_proto_goTypes = nil
	file_vod_response_response_vod_proto_depIdxs = nil
}
