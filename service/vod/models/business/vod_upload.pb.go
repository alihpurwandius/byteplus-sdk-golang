// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: vod/business/vod_upload.proto

package business

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type VodUrlUploadURLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceUrl    string `protobuf:"bytes,1,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`       // 视频的URL
	CallbackArgs string `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"` // 透传的回调信息
	Md5          string `protobuf:"bytes,3,opt,name=Md5,proto3" json:"Md5,omitempty"`                   // 视频的MD5
	TemplateId   string `protobuf:"bytes,4,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`     // 模板Id
	Title        string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`               // 标题
	Description  string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`   // 描述信息
	Tags         string `protobuf:"bytes,7,opt,name=Tags,proto3" json:"Tags,omitempty"`                 // 标签
	Category     string `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`         // 分类
}

func (x *VodUrlUploadURLSet) Reset() {
	*x = VodUrlUploadURLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadURLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadURLSet) ProtoMessage() {}

func (x *VodUrlUploadURLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadURLSet.ProtoReflect.Descriptor instead.
func (*VodUrlUploadURLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{0}
}

func (x *VodUrlUploadURLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type VodUrlResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ValuePair `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodUrlResponseData) Reset() {
	*x = VodUrlResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlResponseData) ProtoMessage() {}

func (x *VodUrlResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlResponseData.ProtoReflect.Descriptor instead.
func (*VodUrlResponseData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{1}
}

func (x *VodUrlResponseData) GetData() []*ValuePair {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string `protobuf:"bytes,1,opt,name=JobId,proto3" json:"JobId,omitempty"`         // Url对应的JobId
	SourceUrl string `protobuf:"bytes,2,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"` // 上传的Url
}

func (x *ValuePair) Reset() {
	*x = ValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePair) ProtoMessage() {}

func (x *ValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePair.ProtoReflect.Descriptor instead.
func (*ValuePair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{2}
}

func (x *ValuePair) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ValuePair) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

type VodQueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VodQueryUploadResult `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodQueryData) Reset() {
	*x = VodQueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryData) ProtoMessage() {}

func (x *VodQueryData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryData.ProtoReflect.Descriptor instead.
func (*VodQueryData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{3}
}

func (x *VodQueryData) GetData() *VodQueryUploadResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodQueryUploadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaInfoList  []*VodURLSet `protobuf:"bytes,1,rep,name=MediaInfoList,proto3" json:"MediaInfoList,omitempty"`
	NotExistJobIds []string     `protobuf:"bytes,2,rep,name=NotExistJobIds,proto3" json:"NotExistJobIds,omitempty"`
}

func (x *VodQueryUploadResult) Reset() {
	*x = VodQueryUploadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadResult) ProtoMessage() {}

func (x *VodQueryUploadResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadResult.ProtoReflect.Descriptor instead.
func (*VodQueryUploadResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{4}
}

func (x *VodQueryUploadResult) GetMediaInfoList() []*VodURLSet {
	if x != nil {
		return x.MediaInfoList
	}
	return nil
}

func (x *VodQueryUploadResult) GetNotExistJobIds() []string {
	if x != nil {
		return x.NotExistJobIds
	}
	return nil
}

type VodCommitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VodCommitUploadInfoResponseData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodCommitData) Reset() {
	*x = VodCommitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitData) ProtoMessage() {}

func (x *VodCommitData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitData.ProtoReflect.Descriptor instead.
func (*VodCommitData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{5}
}

func (x *VodCommitData) GetData() *VodCommitUploadInfoResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodCommitUploadInfoResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string         `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	SourceInfo   *VodSourceInfo `protobuf:"bytes,2,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	PosterUri    string         `protobuf:"bytes,3,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	CallbackArgs string         `protobuf:"bytes,4,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Mid          string         `protobuf:"bytes,5,opt,name=Mid,proto3" json:"Mid,omitempty"`
}

func (x *VodCommitUploadInfoResponseData) Reset() {
	*x = VodCommitUploadInfoResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResponseData) ProtoMessage() {}

func (x *VodCommitUploadInfoResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResponseData.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResponseData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{6}
}

func (x *VodCommitUploadInfoResponseData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *VodCommitUploadInfoResponseData) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

type VodURLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string         `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	JobId      string         `protobuf:"bytes,2,opt,name=JobId,proto3" json:"JobId,omitempty"`
	SourceUrl  string         `protobuf:"bytes,3,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
	State      string         `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Vid        string         `protobuf:"bytes,5,opt,name=Vid,proto3" json:"Vid,omitempty"`
	SpaceName  string         `protobuf:"bytes,6,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	AccountId  string         `protobuf:"bytes,7,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	SourceInfo *VodSourceInfo `protobuf:"bytes,8,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
}

func (x *VodURLSet) Reset() {
	*x = VodURLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodURLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodURLSet) ProtoMessage() {}

func (x *VodURLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodURLSet.ProtoReflect.Descriptor instead.
func (*VodURLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{7}
}

func (x *VodURLSet) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VodURLSet) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *VodURLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *VodURLSet) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VodURLSet) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodURLSet) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodURLSet) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *VodURLSet) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

type VodApplyUploadInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VodApplyUploadInfoData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodApplyUploadInfoResult) Reset() {
	*x = VodApplyUploadInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoResult) ProtoMessage() {}

func (x *VodApplyUploadInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoResult.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{8}
}

func (x *VodApplyUploadInfoResult) GetData() *VodApplyUploadInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodApplyUploadInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadAddress *VodUploadAddress `protobuf:"bytes,1,opt,name=UploadAddress,proto3" json:"UploadAddress,omitempty"`
}

func (x *VodApplyUploadInfoData) Reset() {
	*x = VodApplyUploadInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoData) ProtoMessage() {}

func (x *VodApplyUploadInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoData.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{9}
}

func (x *VodApplyUploadInfoData) GetUploadAddress() *VodUploadAddress {
	if x != nil {
		return x.UploadAddress
	}
	return nil
}

type VodUploadAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreInfos   []*VodStoreInfo  `protobuf:"bytes,1,rep,name=StoreInfos,proto3" json:"StoreInfos,omitempty"`
	UploadHosts  []string         `protobuf:"bytes,2,rep,name=UploadHosts,proto3" json:"UploadHosts,omitempty"`
	UploadHeader []*VodHeaderPair `protobuf:"bytes,3,rep,name=UploadHeader,proto3" json:"UploadHeader,omitempty"`
	SessionKey   string           `protobuf:"bytes,4,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
}

func (x *VodUploadAddress) Reset() {
	*x = VodUploadAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadAddress) ProtoMessage() {}

func (x *VodUploadAddress) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadAddress.ProtoReflect.Descriptor instead.
func (*VodUploadAddress) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{10}
}

func (x *VodUploadAddress) GetStoreInfos() []*VodStoreInfo {
	if x != nil {
		return x.StoreInfos
	}
	return nil
}

func (x *VodUploadAddress) GetUploadHosts() []string {
	if x != nil {
		return x.UploadHosts
	}
	return nil
}

func (x *VodUploadAddress) GetUploadHeader() []*VodHeaderPair {
	if x != nil {
		return x.UploadHeader
	}
	return nil
}

func (x *VodUploadAddress) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

type VodStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreUri string `protobuf:"bytes,1,opt,name=StoreUri,proto3" json:"StoreUri,omitempty"`
	Auth     string `protobuf:"bytes,2,opt,name=Auth,proto3" json:"Auth,omitempty"`
}

func (x *VodStoreInfo) Reset() {
	*x = VodStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStoreInfo) ProtoMessage() {}

func (x *VodStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStoreInfo.ProtoReflect.Descriptor instead.
func (*VodStoreInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{11}
}

func (x *VodStoreInfo) GetStoreUri() string {
	if x != nil {
		return x.StoreUri
	}
	return ""
}

func (x *VodStoreInfo) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type VodHeaderPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *VodHeaderPair) Reset() {
	*x = VodHeaderPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodHeaderPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodHeaderPair) ProtoMessage() {}

func (x *VodHeaderPair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodHeaderPair.ProtoReflect.Descriptor instead.
func (*VodHeaderPair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{12}
}

func (x *VodHeaderPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VodHeaderPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type VodCommitUploadInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *VodCommitUploadInfoData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodCommitUploadInfoResult) Reset() {
	*x = VodCommitUploadInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResult) ProtoMessage() {}

func (x *VodCommitUploadInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResult.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{13}
}

func (x *VodCommitUploadInfoResult) GetData() *VodCommitUploadInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodCommitUploadInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid        string         `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	PosterUri  string         `protobuf:"bytes,2,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	SourceInfo *VodSourceInfo `protobuf:"bytes,3,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	Mid        string         `protobuf:"bytes,4,opt,name=Mid,proto3" json:"Mid,omitempty"`
}

func (x *VodCommitUploadInfoData) Reset() {
	*x = VodCommitUploadInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoData) ProtoMessage() {}

func (x *VodCommitUploadInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoData.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{14}
}

func (x *VodCommitUploadInfoData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodCommitUploadInfoData) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *VodCommitUploadInfoData) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *VodCommitUploadInfoData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

var File_vod_business_vod_upload_proto protoreflect.FileDescriptor

var file_vod_business_vod_upload_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x1d, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a,
	0x12, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c,
	0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22,
	0x51, 0x0a, 0x12, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x3f, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x56, 0x0a, 0x0c, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8d, 0x01, 0x0a, 0x14,
	0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x4d, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x42, 0x79,
	0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x52,
	0x4c, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x62, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x6f, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x0d, 0x56,
	0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x42, 0x79, 0x74,
	0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xd4, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69,
	0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x22, 0x8e, 0x02, 0x0a, 0x09, 0x56, 0x6f, 0x64, 0x55, 0x52,
	0x4c, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x56, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x64, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a,
	0x16, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xf1, 0x01,
	0x0a, 0x10, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x12, 0x4f, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x22, 0x3e, 0x0a, 0x0c, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69, 0x12, 0x12, 0x0a,
	0x04, 0x41, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x75, 0x74,
	0x68, 0x22, 0x37, 0x0a, 0x0d, 0x56, 0x6f, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x66, 0x0a, 0x19, 0x56, 0x6f,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xa8, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x4b,
	0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x42, 0xd9, 0x01,
	0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x09, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x62, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0,
	0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x24, 0x42, 0x79, 0x74, 0x65, 0x70,
	0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2,
	0x02, 0x27, 0x42, 0x79, 0x74, 0x65, 0x70, 0x6c, 0x75, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_vod_business_vod_upload_proto_rawDescOnce sync.Once
	file_vod_business_vod_upload_proto_rawDescData = file_vod_business_vod_upload_proto_rawDesc
)

func file_vod_business_vod_upload_proto_rawDescGZIP() []byte {
	file_vod_business_vod_upload_proto_rawDescOnce.Do(func() {
		file_vod_business_vod_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_business_vod_upload_proto_rawDescData)
	})
	return file_vod_business_vod_upload_proto_rawDescData
}

var file_vod_business_vod_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_vod_business_vod_upload_proto_goTypes = []interface{}{
	(*VodUrlUploadURLSet)(nil),              // 0: Byteplus.Vod.Models.Business.VodUrlUploadURLSet
	(*VodUrlResponseData)(nil),              // 1: Byteplus.Vod.Models.Business.VodUrlResponseData
	(*ValuePair)(nil),                       // 2: Byteplus.Vod.Models.Business.ValuePair
	(*VodQueryData)(nil),                    // 3: Byteplus.Vod.Models.Business.VodQueryData
	(*VodQueryUploadResult)(nil),            // 4: Byteplus.Vod.Models.Business.VodQueryUploadResult
	(*VodCommitData)(nil),                   // 5: Byteplus.Vod.Models.Business.VodCommitData
	(*VodCommitUploadInfoResponseData)(nil), // 6: Byteplus.Vod.Models.Business.VodCommitUploadInfoResponseData
	(*VodURLSet)(nil),                       // 7: Byteplus.Vod.Models.Business.VodURLSet
	(*VodApplyUploadInfoResult)(nil),        // 8: Byteplus.Vod.Models.Business.VodApplyUploadInfoResult
	(*VodApplyUploadInfoData)(nil),          // 9: Byteplus.Vod.Models.Business.VodApplyUploadInfoData
	(*VodUploadAddress)(nil),                // 10: Byteplus.Vod.Models.Business.VodUploadAddress
	(*VodStoreInfo)(nil),                    // 11: Byteplus.Vod.Models.Business.VodStoreInfo
	(*VodHeaderPair)(nil),                   // 12: Byteplus.Vod.Models.Business.VodHeaderPair
	(*VodCommitUploadInfoResult)(nil),       // 13: Byteplus.Vod.Models.Business.VodCommitUploadInfoResult
	(*VodCommitUploadInfoData)(nil),         // 14: Byteplus.Vod.Models.Business.VodCommitUploadInfoData
	(*VodSourceInfo)(nil),                   // 15: Byteplus.Vod.Models.Business.VodSourceInfo
}
var file_vod_business_vod_upload_proto_depIdxs = []int32{
	2,  // 0: Byteplus.Vod.Models.Business.VodUrlResponseData.Data:type_name -> Byteplus.Vod.Models.Business.ValuePair
	4,  // 1: Byteplus.Vod.Models.Business.VodQueryData.Data:type_name -> Byteplus.Vod.Models.Business.VodQueryUploadResult
	7,  // 2: Byteplus.Vod.Models.Business.VodQueryUploadResult.MediaInfoList:type_name -> Byteplus.Vod.Models.Business.VodURLSet
	6,  // 3: Byteplus.Vod.Models.Business.VodCommitData.Data:type_name -> Byteplus.Vod.Models.Business.VodCommitUploadInfoResponseData
	15, // 4: Byteplus.Vod.Models.Business.VodCommitUploadInfoResponseData.SourceInfo:type_name -> Byteplus.Vod.Models.Business.VodSourceInfo
	15, // 5: Byteplus.Vod.Models.Business.VodURLSet.SourceInfo:type_name -> Byteplus.Vod.Models.Business.VodSourceInfo
	9,  // 6: Byteplus.Vod.Models.Business.VodApplyUploadInfoResult.Data:type_name -> Byteplus.Vod.Models.Business.VodApplyUploadInfoData
	10, // 7: Byteplus.Vod.Models.Business.VodApplyUploadInfoData.UploadAddress:type_name -> Byteplus.Vod.Models.Business.VodUploadAddress
	11, // 8: Byteplus.Vod.Models.Business.VodUploadAddress.StoreInfos:type_name -> Byteplus.Vod.Models.Business.VodStoreInfo
	12, // 9: Byteplus.Vod.Models.Business.VodUploadAddress.UploadHeader:type_name -> Byteplus.Vod.Models.Business.VodHeaderPair
	14, // 10: Byteplus.Vod.Models.Business.VodCommitUploadInfoResult.Data:type_name -> Byteplus.Vod.Models.Business.VodCommitUploadInfoData
	15, // 11: Byteplus.Vod.Models.Business.VodCommitUploadInfoData.SourceInfo:type_name -> Byteplus.Vod.Models.Business.VodSourceInfo
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_vod_business_vod_upload_proto_init() }
func file_vod_business_vod_upload_proto_init() {
	if File_vod_business_vod_upload_proto != nil {
		return
	}
	file_vod_business_vod_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vod_business_vod_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadURLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodURLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodHeaderPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_business_vod_upload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_business_vod_upload_proto_goTypes,
		DependencyIndexes: file_vod_business_vod_upload_proto_depIdxs,
		MessageInfos:      file_vod_business_vod_upload_proto_msgTypes,
	}.Build()
	File_vod_business_vod_upload_proto = out.File
	file_vod_business_vod_upload_proto_rawDesc = nil
	file_vod_business_vod_upload_proto_goTypes = nil
	file_vod_business_vod_upload_proto_depIdxs = nil
}
