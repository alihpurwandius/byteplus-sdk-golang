// Code generated by protoc-gen-volcengine-sdk
// source: VodMediaService
// DO NOT EDIT!

package vod

import (
	"fmt"
	"testing"

	"github.com/byteplus-sdk/byteplus-sdk-golang/base"
	"github.com/byteplus-sdk/byteplus-sdk-golang/service/vod"
	"github.com/byteplus-sdk/byteplus-sdk-golang/service/vod/models/request"
)

func Test_UpdateMediaInfo(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodUpdateMediaInfoRequest{
		Vid:         "your Vid",
		PosterUri:   nil,
		Title:       nil,
		Description: nil,
		Tags:        nil,
	}

	resp, status, err := instance.UpdateMediaInfo(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_UpdateMediaPublishStatus(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodUpdateMediaPublishStatusRequest{
		Vid:    "your Vid",
		Status: "your Status",
	}

	resp, status, err := instance.UpdateMediaPublishStatus(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_GetMediaInfos(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodGetMediaInfosRequest{
		Vids: "your Vids",
	}

	resp, status, err := instance.GetMediaInfos(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DeleteMedia(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodDeleteMediaRequest{
		Vids:         "your Vids",
		CallbackArgs: "your CallbackArgs",
	}

	resp, status, err := instance.DeleteMedia(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DeleteTranscodes(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodDeleteTranscodesRequest{
		Vid:          "your Vid",
		FileIds:      "your FileIds",
		CallbackArgs: "your CallbackArgs",
	}

	resp, status, err := instance.DeleteTranscodes(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_GetMediaList(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.VodGetMediaListRequest{
		SpaceName: "your SpaceName",
		Vid:       "your Vid",
		Status:    "your Status",
		Order:     "your Order",
		Tags:      "your Tags",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		Offset:    "your Offset",
		PageSize:  "your PageSize",
	}

	resp, status, err := instance.GetMediaList(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}
