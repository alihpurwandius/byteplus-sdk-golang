// Code generated by protoc-gen-byteplus-sdk
// source: VodMeasureService
// DO NOT EDIT!

package vod

import (
	"fmt"
	"testing"

	"github.com/alihpurwandius/byteplus-sdk-golang/base"
	"github.com/alihpurwandius/byteplus-sdk-golang/service/vod"
	"github.com/alihpurwandius/byteplus-sdk-golang/service/vod/models/request"
)

func Test_DescribeVodSpaceTranscodeData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceTranscodeDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		TranscodeType:   "your TranscodeType",
		Specification:   "your Specification",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
	}

	resp, status, err := instance.DescribeVodSpaceTranscodeData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSpaceSubtitleStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSpaceSubtitleStatisDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		SubtitleType:    "your SubtitleType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
	}

	resp, status, err := instance.DescribeVodSpaceSubtitleStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodSnapshotData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodSnapshotDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		SnapshotType:    "your SnapshotType",
		TaskStageList:   "your TaskStageList",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
	}

	resp, status, err := instance.DescribeVodSnapshotData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodEnhanceImageData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodEnhanceImageDataRequest{
		SpaceList:     "your SpaceList",
		StartTime:     "your StartTime",
		EndTime:       "your EndTime",
		TaskTypeList:  "your TaskTypeList",
		TaskStageList: "your TaskStageList",
		Aggregation:   0,
		RegionList:    "your RegionList",
	}

	resp, status, err := instance.DescribeVodEnhanceImageData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodPlayedStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodPlayedStatisDataRequest{
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		VidList:   "your VidList",
		OrderType: "your OrderType",
	}

	resp, status, err := instance.DescribeVodPlayedStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodMostPlayedStatisData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodMostPlayedStatisDataRequest{
		Space:     "your Space",
		StartTime: "your StartTime",
		EndTime:   "your EndTime",
		OrderType: "your OrderType",
		TopN:      0,
	}

	resp, status, err := instance.DescribeVodMostPlayedStatisData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}

func Test_DescribeVodRealtimeMediaData(t *testing.T) {
	instance := vod.NewInstance()
	instance.SetCredential(base.Credentials{
		AccessKeyID:     "your ak",
		SecretAccessKey: "your sk",
	})

	query := &request.DescribeVodRealtimeMediaDataRequest{
		SpaceList:       "your SpaceList",
		StartTime:       "your StartTime",
		EndTime:         "your EndTime",
		ProcessType:     "your ProcessType",
		Aggregation:     0,
		DetailFieldList: "your DetailFieldList",
	}

	resp, status, err := instance.DescribeVodRealtimeMediaData(query)
	fmt.Println(status)
	fmt.Println(err)
	fmt.Println(resp.String())
}
